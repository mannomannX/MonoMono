#!/bin/bash
# ==============================================================================
# MONOMONO-DISCONNECT v1.2 (Flexibel & Robust)
# ==============================================================================
# Trennt ausgew√§hlte Sub-Repos von einem Fusions-Repo oder das gesamte Setup.
# Nutzt eine interaktive Auswahl und konsistente Authentifizierung.
# ==============================================================================

auth_check() {
    if ! gh auth status >/dev/null 2>&1; then
        echo "‚ö†Ô∏è  Du scheinst nicht bei der GitHub CLI angemeldet zu sein."
        read -p "? Soll 'gh auth login' jetzt ausgef√ºhrt werden? (j/n) " choice
        if [[ "$choice" =~ ^[YyJj]$ ]]; then gh auth login; else echo "‚ùå Abbruch."; exit 1; fi
    fi
    GITHUB_USER=$(gh api user --jq .login)
    echo "‚úî Authentifiziert als '$GITHUB_USER'."
}

# --- HAUPTLOGIK ---
auth_check

# 1. Ziel-Repo abfragen
read -p "? Von welchem Fusions-Repo soll getrennt werden? (Format: user/repo): " FUSION_REPO
FUSION_REPO=$(echo "$FUSION_REPO" | xargs)
if [ -z "$FUSION_REPO" ]; then echo "‚ùå Abbruch: Kein Repo angegeben."; exit 1; fi

# 2. PAT f√ºr alle API-Operationen abfragen
echo "--------------------------------------------------------------------"
echo "üîë INFO: Ein pers√∂nlicher Zugriffstoken (PAT) wird ben√∂tigt."
echo "‚ÄºÔ∏è  WICHTIG: Der Token braucht die Scopes 'repo' UND 'workflow'."
echo "--------------------------------------------------------------------"
PAT=""
while [ -z "$PAT" ]; do
    read -s -p "üëâ Bitte f√ºge den kopierten Token hier ein und dr√ºcke ENTER: " PAT; echo
done
SCOPES=$(curl -s -H "Authorization: token $PAT" https://api.github.com/ -I | grep -i x-oauth-scopes | sed 's/x-oauth-scopes: //g' | tr -d '\r')
if ! [[ "$SCOPES" == *"repo"* && "$SCOPES" == *"workflow"* ]]; then
    echo "‚ùå FEHLER: Der Token hat nicht die erforderlichen Scopes 'repo' und 'workflow'." >&2
    exit 1
fi
echo "‚úî Access Token ist g√ºltig."

# 3. Bestehende Konfiguration auslesen (mit explizitem PAT)
echo "-> Lese die aktuelle Konfiguration aus '$FUSION_REPO'..."
WORKFLOW_RESPONSE=$(GH_TOKEN=$PAT gh api "repos/$FUSION_REPO/contents/.github/workflows/sync.yml" 2>/dev/null)
if ! echo "$WORKFLOW_RESPONSE" | jq -e '.sha' > /dev/null; then
    echo "‚ùå Fehler: Konnte 'sync.yml' im Repo '$FUSION_REPO' nicht lesen." >&2
    exit 1
fi
WORKFLOW_CONTENT=$(echo "$WORKFLOW_RESPONSE" | jq -r .content | base64 --decode)
WORKFLOW_SHA=$(echo "$WORKFLOW_RESPONSE" | jq -r .sha)
SUB_REPOS_OLD=$(echo "$WORKFLOW_CONTENT" | grep -oP "for repo in \\\$\(echo '([^']*)'" | head -n1 | sed -E "s/for repo in \\\$\(echo '([^']*)'/\1/")

if [ -z "$SUB_REPOS_OLD" ]; then
    echo "‚ÑπÔ∏è  Es sind keine Sub-Repos mit diesem Fusions-Repo verbunden."
    exit 0
fi

# 4. Interaktive Auswahl der zu trennenden Repos
echo "-> W√§hle die zu trennenden Sub-Repos:"
echo "   (Navigation: Pfeiltasten, Auswahl: TAB, Best√§tigen: ENTER)"
REPOS_TO_DISCONNECT=$(echo "$SUB_REPOS_OLD" | tr ',' '\n' | fzf --multi --prompt="Trennen> ")
if [ -z "$REPOS_TO_DISCONNECT" ]; then echo "‚ùå Abbruch: Keine Repos ausgew√§hlt."; exit 1; fi

echo "Folgende Repos werden getrennt:"
echo "$REPOS_TO_DISCONNECT"
read -p "? Fortfahren? (j/n) " choice
if [[ ! "$choice" =~ ^[YyJj]$ ]]; then echo "‚ùå Abbruch."; exit 1; fi

# 5. Trennungslogik
for repo in $REPOS_TO_DISCONNECT; do
    echo "-> Trenne $repo..."
    # L√∂sche Secrets (mit explizitem PAT)
    GH_TOKEN=$PAT gh secret delete MONOMONO_FUSION_REPO --repo "$repo"
    GH_TOKEN=$PAT gh secret delete MONOMONO_APP_TOKEN --repo "$repo" # KORREKTUR: Korrekten Secret-Namen verwenden

    # L√∂sche Workflow (mit explizitem PAT)
    SHA_TRIGGER=$(GH_TOKEN=$PAT gh api "repos/$repo/contents/.github/workflows/monomono-trigger.yml" --jq .sha 2>/dev/null)
    if [ -n "$SHA_TRIGGER" ]; then
        GH_TOKEN=$PAT gh api --method DELETE "repos/$repo/contents/.github/workflows/monomono-trigger.yml" -f message="build: Remove monomono trigger" -f sha="$SHA_TRIGGER" >/dev/null
    fi
done

# 6. Fusions-Repo-Workflow aktualisieren
echo "-> Aktualisiere Haupt-Workflow in '$FUSION_REPO'..."
# Erstelle die neue, reduzierte Liste von Sub-Repos
SUB_REPOS_NEW=$(echo ",$SUB_REPOS_OLD," | sed "s/,$(echo $REPOS_TO_DISCONNECT | sed 's/ /|/g'),/,/g" | sed 's/^,//;s/,$//')

# Erstelle die neue Workflow-Datei (nur wenn noch Repos √ºbrig sind)
if [ -n "$SUB_REPOS_NEW" ]; then
    # Ersetze die alte Liste durch die neue im Workflow-Template
    NEW_WORKFLOW_CONTENT=$(echo "$WORKFLOW_CONTENT" | sed "s/'$SUB_REPOS_OLD'/'$SUB_REPOS_NEW'/")
    GH_TOKEN=$PAT gh api --method PUT "repos/$FUSION_REPO/contents/.github/workflows/sync.yml" \
       -f message="build: Disconnect sub-repo(s)" \
       -f content="$(echo -n "$NEW_WORKFLOW_CONTENT" | base64)" \
       -f sha="$WORKFLOW_SHA" >/dev/null
    echo "‚úî Haupt-Workflow wurde aktualisiert."
else
    echo "‚ÑπÔ∏è  Keine Sub-Repos mehr verbunden. Der Haupt-Workflow wird nicht aktualisiert."
fi

echo "‚úî Ausgew√§hlte Sub-Repos erfolgreich getrennt."

# 7. Optionales L√∂schen des Fusions-Repo
read -p "? Soll auch das Fusions-Repo '$FUSION_REPO' selbst gel√∂scht werden? (j/n) " delete_choice
if [[ "$delete_choice" =~ ^[YyJj]$ ]]; then
    GH_TOKEN=$PAT gh repo delete "$FUSION_REPO" --yes
    echo "‚úÖ Fusions-Repo '$FUSION_REPO' wurde gel√∂scht."
fi

echo "‚úÖ Prozess abgeschlossen."