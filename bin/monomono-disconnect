#!/bin/bash
# Entfernt alle MonoMono-Konfigurationen aus einem Setup.

read -p "? Welches Fusions-Repo soll getrennt werden? (user/repo): " FUSION_REPO
if [ -z "$FUSION_REPO" ]; then echo "❌ Abbruch: Kein Repo angegeben."; exit 1; fi

# Logik zum Auslesen der Sub-Repos (wie im Upgrade-Skript)
WORKFLOW_CONTENT=$(gh api "repos/$FUSION_REPO/contents/.github/workflows/sync.yml" --jq .content -t | base64 --decode 2>/dev/null)
SUB_REPOS=$(echo "$WORKFLOW_CONTENT" | grep -oP "for repo in \\\$\(echo '([^']*)'" | head -n1 | sed -E "s/for repo in \\\$\(echo '([^']*)'/\1/")

if [ -z "$SUB_REPOS" ]; then
    echo "⚠️ Konnte verbundene Sub-Repos nicht automatisch finden. Bitte manuell eingeben."
    read -p "? Gib die zu trennenden Sub-Repos ein (user/repo1,user/repo2,...): " SUB_REPOS
fi

echo "Folgende Repos werden getrennt: $SUB_REPOS"
read -p "? Fortfahren? (j/n) " choice
if [[ ! "$choice" =~ ^[YyJj]$ ]]; then echo "❌ Abbruch."; exit 1; fi

# Trennungslogik
for repo in $(echo "$SUB_REPOS" | sed "s/,/ /g"); do
    echo "-> Trenne $repo..."
    # Lösche Secrets
    gh secret delete MONOMONO_FUSION_REPO --repo "$repo"
    gh secret delete MONOMONO_PAT --repo "$repo"
    # Lösche Workflow
    SHA=$(gh api repos/$repo/contents/.github/workflows/monomono-trigger.yml --jq .sha -t 2>/dev/null)
    if [ -n "$SHA" ]; then
        gh api --method DELETE repos/$repo/contents/.github/workflows/monomono-trigger.yml -f message="build: Remove monomono trigger" -f sha="$SHA" >/dev/null
    fi
done

echo "✔ Alle Sub-Repos erfolgreich getrennt."
read -p "? Soll auch das Fusions-Repo '$FUSION_REPO' auf GitHub gelöscht werden? (j/n) " delete_choice
if [[ "$delete_choice" =~ ^[YyJj]$ ]]; then
    gh repo delete "$FUSION_REPO" --yes
    echo "✅ Fusions-Repo '$FUSION_REPO' wurde gelöscht."
fi